.. _syntax:

Syntax
******

Overview
========

For a quick glance at what croeleparser implements, see the
`creoleparser cheatsheet <http://purl.oclc.org/creoleparser/cheatsheet>`_.

Creoleparser adhers very closely to the basic `Creole 1.0 specification <http://wikicreole.org/wiki/Creole1.0>`_
and optionally implements most `additions <http://wiki.wikicreole.org/Creole%201.0/additions>`_ (not including
alternate link sytax and indented paragraphs). These pages should be
refered to for full details on the syntax. 

Below find extra syntax features of creoleparser.

Mixed Lists
===========

Creoleparser allows nesting of ordered lists within unordered lists (and visa versa) to any depth.
Creole 1.0 does not specify or suggest a syntax for mixed list support. Creoleparser uses the same
syntax as `Confluence <http://www.atlassian.com/software/confluence/>`_::

   # this is list item one
   ** unordered subitem 1
   ** unordered subitem 2
   # item two
   ** unordered subitem 1
   ** unordered subitem 2
   # item three

Macros
======

Creoleparser supports the same macro syntax as suggested by Creole, e.g.,::

   <<CurrentTimePlugin format='yyyy.MM.dd'>>

In addition to the above, creoleparser supports *macros with bodies*, e.g.,::

   <<foo>>Some content to process<</foo>>

Normally, *bodied* macros will not span other block-level markup (like tables)
or blank lines. This can be forced however, using the following syntax::
   
   <<float side=right>>
   Some content to float.

   Including a second paragraph.
   <</float>>
              
Note that both parts of the macro markup are on a line by themselves
and have no leading spaces, analogous to a Creole pre block::

   {{{
   Some content to render in a <pre>.

   Including a second paragraph.   
   }}}

Macro Names
-----------
A macro name must start with a letter and can include letters, numbers,
and non-repeating periods and hyphens.

Macro Arguments and Delimiters
------------------------------

Creoleparser does not specify or suggest the format of macro arguments. Internally,
the entire string from the `macro_name` to the ``>>`` are passed as the `arg_string`.
For this reason, an implementer should chose something other than legal macro name
characters to delimit the arguments.





